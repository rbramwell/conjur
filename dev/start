#!/bin/bash -ex

function print_help() {
  cat << EOF
Starts Conjur for development. Once setup is complete, the user is dropped into the Conjur container.
To start the application server, run:
    # conjurctl server
Usage: start [options]
    --authn-ldap    Starts OpenLDAP server and loads a demo policy to enable authentication via:
                    'curl -X POST -d "alice" http://localhost:3000/authn-ldap/test/cucumber/alice/authenticate'
    -h, --help      Shows this help message.
EOF
exit
}

unset COMPOSE_PROJECT_NAME

# Determine which extra services should be loaded when working with authenticators
ENABLE_AUTHN_LDAP=false
while true ; do
  case "$1" in
    --authn-ldap ) ENABLE_AUTHN_LDAP=true ; shift ;;
    -h | --help ) print_help ; shift ;;
     * ) if [ -z "$1" ]; then break; else echo "$1 is not a valid option"; exit 1; fi;;
  esac
done

docker-compose build

if [ ! -f data_key ]; then
	echo "Generating data key"
	openssl rand -base64 32 > data_key
fi

export CONJUR_DATA_KEY="$(cat data_key)"

services="pg conjur testdb cucumber"
docker-compose up -d --no-deps $services
docker-compose exec conjur bundle
docker-compose exec conjur conjurctl db migrate
docker-compose exec conjur conjurctl account create cucumber || true

env_args=
if [[ $ENABLE_AUTHN_LDAP = true ]]; then
  services="$services ldap-server"
  env_args="$env_args -e CONJUR_AUTHENTICATORS=authn-ldap/test"
  env_args="$env_args -e LDAP_URI=ldap://ldap-server:389"
  env_args="$env_args -e LDAP_BASE=dc=conjur,dc=net"
  env_args="$env_args -e LDAP_FILTER=(uid=%s)"
  env_args="$env_args -e LDAP_BINDDN=cn=admin,dc=conjur,dc=net"
  env_args="$env_args -e LDAP_BINDPW=ldapsecret"
  docker-compose exec conjur conjurctl policy load cucumber /src/conjur-server/dev/files/authn-ldap/policy.yml
fi

docker-compose up -d --no-deps $services

api_key=$(docker-compose exec -T conjur conjurctl \
	role retrieve-key cucumber:user:admin | tr -d '\r')
docker exec -e CONJUR_AUTHN_API_KEY=$api_key $env_args -it --detach-keys 'ctrl-\' $(docker-compose ps -q cucumber) bash
